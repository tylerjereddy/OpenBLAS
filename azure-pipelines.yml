trigger:
  # start a new build for every push
  batch: False
  branches:
    include:
      - develop

jobs:
- job: ARMv6_gcc
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: |
      docker run --rm --privileged multiarch/qemu-user-static:register --reset
      echo "FROM openblas/alpine:arm32
        COPY . /tmp/openblas
        RUN mkdir /tmp/openblas/build                             &&  \
            cd /tmp/openblas/build                                &&  \
            CC=gcc cmake -D DYNAMIC_ARCH=OFF                          \
                                 -D TARGET=ARMV6                      \
                                 -D NOFORTRAN=ON                      \
                                 -D BUILD_SHARED_LIBS=ON              \
                                 -D BUILD_WITHOUT_LAPACK=ON           \
                                 -D BUILD_WITHOUT_CBLAS=ON            \
                                 -D CMAKE_BUILD_TYPE=Release ../  &&  \
            cmake --build ." > Dockerfile
      docker build .
    displayName: Run ARMV6 docker build
# manylinux1 is useful to test because the
# standard Docker container uses an old version
# of gcc / glibc
- job: manylinux1_gcc
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: |
      echo "FROM quay.io/pypa/manylinux1_x86_64
        COPY . /tmp/openblas
        RUN cd /tmp/openblas                                      &&  \
            COMMON_FLAGS='DYNAMIC_ARCH=1 TARGET=NEHALEM NUM_THREADS=32' && \
            BTYPE='BINARY=64' CC=gcc && \
            make QUIET_MAKE=1 $COMMON_FLAGS $BTYPE && \
            make -C test $COMMON_FLAGS $BTYPE && \
            make -C ctest $COMMON_FLAGS $BTYPE && \
            make -C utest $COMMON_FLAGS $BTYPE" > Dockerfile
      docker build .
    displayName: Run manylinux1 docker build
- job: Intel_SDE_skx
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: |
      sudo apt-get -y install gfortran
    displayName: 'install gfortran'
  - script: |
      mkdir SDE && cd SDE
      wget -O sde-external-8.35.0-2019-03-11-lin.tar.bz2 https://www.dropbox.com/s/fopsnzj67572sj5/sde-external-8.35.0-2019-03-11-lin.tar.bz2?dl=0
      tar -xjvf sde-external-8.35.0-2019-03-11-lin.tar.bz2
      cd ..
    displayName: 'Download / Install Intel SDE'
  - script: |
      # standard OpenBLAS build
      make QUIET_MAKE=1 $COMMON_FLAGS $BTYPE
    displayName: 'Build OpenBLAS'
    env:
       COMMON_FLAGS: 'DYNAMIC_ARCH=1 NUM_THREADS=32'
       BTYPE: 'BINARY=64'
       CC: gcc
  - bash: |
      # make can change directories for testing
      # so use an absolute path with SDE
      SDEDIR=`pwd`
      # probe runtime SkylakeX kernel behavior
      # under emulation
      $SDEDIR/SDE/sde-external-8.35.0-2019-03-11-lin/sde64 -cpuid_in $SDEDIR/SDE/sde-external-8.35.0-2019-03-11-lin/misc/cpuid/skx/cpuid.def -- make -C utest DYNAMIC_ARCH=1 NUM_THREADS=32 BINARY=64
    displayName: 'Run Intel SDE SkylakeX tests'
